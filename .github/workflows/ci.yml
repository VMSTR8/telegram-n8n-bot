name: CI Pipeline

on:
  release:
    types: [ published ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
          cache: 'pip'

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: Run tests
        env:
          TELEGRAM__BOT_TOKEN: '123456:TEST_BOT_TOKEN_FOR_TESTING'
          TELEGRAM__CREATOR_ID: '123456789'
          DATABASE__HOST: 'localhost'
          DATABASE__PORT: '5432'
          DATABASE__USER: 'test_db'
          DATABASE__PASSWORD: 'test_password'
          DATABASE__BASENAME: 'test_db'
          RABBITMQ__HOST: 'localhost'
          RABBITMQ__PORT: '5672'
          RABBITMQ__USER: 'test_user'
          RABBITMQ__PASSWORD: 'test_password'
          N8N__N8N_WEBHOOK_URL: 'http://localhost:5678/webhook-test'
          N8N__N8N_WEBHOOK_SECRET: 'test_n8n_secret'
        run: |
          python3 -m pytest


  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extract version from release tag
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/telegrambot_n8n:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/telegrambot_n8n:${{ env.VERSION }}
