from app.services import MessageQueueService
from app.utils import ValidationResult


async def send_callsign_validation_error(
        message_queue_service: MessageQueueService,
        chat_id: int,
        validation_result: ValidationResult,
        command: str,
        message_id: int
) -> None:
    """
    Send error message about invalid callsign format.

    Args:
        message_queue_service (MessageQueueService): The message queue service instance.
        chat_id (int): Telegram chat ID of the user.
        validation_result (ValidationResult): The result of the callsign validation.
        command (str): The command that triggered the validation.
        message_id (int): The ID of the original message.

    Returns:
        None
    """
    await message_queue_service.send_message(
        chat_id=chat_id,
        text=f'‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –ø–æ–∑—ã–≤–Ω–æ–≥–æ.\n\n'
             f'{validation_result.error_message}\n\n'
             f'–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: `{command} –ø–æ–∑—ã–≤–Ω–æ–π`\n\n'
             f'–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–æ–∑—ã–≤–Ω–æ–º—É:\n'
             f'üî§ –¢–æ–ª—å–∫–æ –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã\n'
             f'üìè –î–ª–∏–Ω–∞ –æ—Ç 1 –¥–æ 20 —Å–∏–º–≤–æ–ª–æ–≤\n'
             f'üö´ –ë–µ–∑ —Ü–∏—Ñ—Ä, —Å–ø–µ—Ü —Å–∏–º–≤–æ–ª–æ–≤ –∏ –ø—Ä–æ–±–µ–ª–æ–≤\n'
             f'üÜî –ü–æ–∑—ã–≤–Ω–æ–π –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —É–Ω–∏–∫–∞–ª—å–Ω—ã–º',
        parse_mode='Markdown',
        message_id=message_id
    )
